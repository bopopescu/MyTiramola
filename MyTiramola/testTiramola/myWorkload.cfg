# Copyright (c) 2010 Yahoo! Inc. All rights reserved.                                                                                                                             
#                                                                                                                                                                                 
# Licensed under the Apache License, Version 2.0 (the "License"); you                                                                                                             
# may not use this file except in compliance with the License. You                                                                                                                
# may obtain a copy of the License at                                                                                                                                             
#                                                                                                                                                                                 
# http://www.apache.org/licenses/LICENSE-2.0                                                                                                                                      
#                                                                                                                                                                                 
# Unless required by applicable law or agreed to in writing, software                                                                                                             
# distributed under the License is distributed on an "AS IS" BASIS,                                                                                                               
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or                                                                                                                 
# implied. See the License for the specific language governing                                                                                                                    
# permissions and limitations under the License. See accompanying                                                                                                                 
# LICENSE file.                                                                                                                                                                   


# Yahoo! Cloud System Benchmark
# Workload A: Update heavy workload
#   Application example: Session store recording recent actions
#                        
#   Read/update ratio: 50/50
#   Default data size: 1 KB records (10 fields, 100 bytes each, plus key)
#   Request distribution: zipfian


#### 	WORKLOADa      ######
# recordcount=1000
# operationcount=1000
# workload=com.yahoo.ycsb.workloads.CoreWorkload

# readallfields=true

# readproportion=0.5
# updateproportion=0.5
# scanproportion=0
# insertproportion=0

# requestdistribution=zipfian
####    END-OF-WORKLOADa    ########

#######################
## MORE THAN WORKLOADa:

# Not existing in workload_template
# threadcount=20	# number of YCSB client threads. Alternatively this may be specified on the command line. (default: 1)
# -threads 10		# the number of client threads. https://github.com/brianfrankcooper/YCSB/wiki/Running-a-Workload
# -threads @classpath, threadcount=X @ workload.cfg

# -target 100		# the target number of operations per secondown
# -target 16666		# [(initial)target/clients @execution_load of YCSBController.py] currently unknown

# https://github.com/brianfrankcooper/YCSB/wiki/Core-Properties
###########################################################################

# Class to use (almost default)
workload=com.yahoo.ycsb.workloads.CoreWorkload

# Related to the type of databased used. In this case: HBase
table=tiramolatable
columnfamily=thesisfam

# True: will read all fields
# False: will not read all fields
readallfields=true

# How the latency measurements are presented and in what granularity
measurementtype=timeseries
timeseries.granularity=1000


# Upper bound for execution-time (in seconds) given that the operations (defined by operationcount) will exceed the execution-time
maxexecutiontime=180
operationcount=2500000

# number of YCSB client threads.
threadcount=15

# LoadPhase: number of records to be loaded
# RunPhase: number of records already loaded(like a remainder)
recordcount=1000000

# Define proportions of reads, updates, scans and insertions
readproportion=1.0
updateproportion=0
scanproportion=0
insertproportion=0

# Type of distribution to be created as workload: zipfian, uniform or latest
requestdistribution=uniform
