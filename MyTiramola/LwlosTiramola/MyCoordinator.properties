[config]
#### PROPERTIES FOR RUNNING TIRAMOLA_V2.0(LWLOS-EDITION modified by gioargyr)

#################################Backend Setup##############################################
## The so-called installation directory. It contains all files related to Tiramola-code
#install_dir = /home/ubuntu/MyTiramola/MyTiramola/LwlosTiramola
#install_dir = /media/indiana/data/BDE-xartoura
install_dir = C:\Users\Giorgos\Desktop\virtual_tiramola
## CHOOSE API to call the cluster controller and DEFINE the corresponding .sh rc_file
# CHOICES: EC2 (for Eucalyptus), EC2_OS (for OpenStack)
cloud_api_type = EC2_OS
#rc_file = /gargyr-openrc.sh
#rc_file = /dummy.txt
rc_file = \dummy.txt
rc_pwd = john@ntua2015
## The dir that contains the credentials downloaded from Eucalyptus or OpenStack Web frontend
#euca_rc_dir = /home/ubuntu/.openstack
#euca_rc_dir = /media/indiana/data/BDE-xartoura
euca_rc_dir = C:\Users\Giorgos\Desktop\virtual_tiramola
## Temporary database location
db_file = sqlite:////home/ubuntu/hbase.db
## The name of the cluster	// testing with ganglia cluster name! meine: "gargyr- ... "? Don't know waht it is and don't know where to find it! ASK
cluster_name = thesis_cluster
## CHOOSE the NoSQL DB to use
# CHOICES: HBASE, HBASE92, VOLDEMORT, CASSANDRA, RIAK
cluster_type = HBASE
## The default size for instances. It has to be one of the possible flavors
instance_type = m1.medium
## The template hostname for instances to be NoSQL-slaves
hostname_template = node
## The template hostname for instances to be ycsb-clients
ycsb_hostname_template = ycsb-client
## Define min number of server nodes including master
min_server_nodes = 3
## Define max number of server nodes including master
max_server_nodes = 5
## Starting one master and one node originally		// klein meine, vale 1 + 1 an thes (aka 1) POU XRHSIMOPOIEITAI AYTO???
initial_cluster_size = 2
## The location of the private key file		// den exoume ki oute tha exoume kapoia allagi
key_file = /home/ubuntu/.ssh/id_rsa
## The key pair name of the new instances	// Used @ OpenStackCluster.run_instances (?) inside another method, create GTP
keypair_name = hmaster
## flavors to be used..(?) used @ MyDeamon.init_flavors()
possible_flavors = special.evie,m1.medium
## Username in Openstack. Used @Metrics for communicating with OpenStack platform
username = gargyr
## The bucket that contains the emi to use. All dbs are installed in the /opt directory inside the image. ???
bucket_name = ded38fe1-afd6-4a11-946d-d17253a639f6
## If set to True, it will do all the initial(and one-time-do-it) tasks (loading data to NoSQL db, start NoSQL db and more).
reconfigure = False

#################################Decision-Making setup######################################
## DEFINE decision_making_file AND training_file (If not, value of training_file is ignored)
#decision_making_file = /home/ubuntu/MyTiramola/MyTiramola/LwlosTiramola/decisionMaking.mdpdt2.json
#training_file = /home/ubuntu/tiramola/training.data
#decision_making_file = /home/indiana/git/MyTiramola/MyTiramola/LwlosTiramola/decisionMaking.mdpdt2.json
decision_making_file = C:\Users\Giorgos\Desktop\virtual_tiramola\decisionMaking.qlearning.json
training_file = C:\Users\Giorgos\Desktop\virtual_tiramola\decisionMaking.qlearning.json
## CHOOSE update_algorithm AND THE CORRESPONDING error AND max_steps (only for MDP and MDP_DT algorithms. Otherwise ignored)
# CHOICES: no_update, single_update, value_iteration, prioritized_sweeping
update_algorithm = single_update
ualgorithm_error = 0.1
max_steps = 200
## CHOOSE SPLITTING CRITERION (only for MDP_DT algorithm. Otherwise ignored)
# CHOICES: mid_point, any_point, median_point, max_point, q-value_difference, info_gain
split_crit = any_point
# cons_trans is related to split_crit. Boolean type. (only for MDP_DT algorithm. Otherwise ignored)
cons_trans = True
## CHOOSE STAT-TEST (only for MDP_DT algorithm. Otherwise ignored)
# CHOICES: student_ttest, welch_ttest, mann_whitney_utest, kolmogorov_smirnov
stat_test = mann_whitney_utest

#################################YCSB setup################################################
## DEFINE YCSB CONF-FILES:
ycsb_binary = /home/ubuntu/ycsb-0.13.0-SNAPSHOT/bin/ycsb
workload_file = /home/ubuntu/MyTiramola/MyTiramola/testTiramola/myWorkload.cfg
ycsb_output = /tmp/ycsb.out
ycsb_clients = 4
## CHOOSE THE TYPE OF LOAD
# CHOICES: sinusoidal, peaky
load_type = sinusoidal
## DEFINE THE LOAD-PARAMETERS FOR SINUSOIDAL:
# ycsb_max_time IS IN SECONDS. Duration of run_test() [one simple run]
ycsb_max_time = 240
# ycsb total_run_time IS IN MINUTES. Duration of the whole experiment
total_run_time = 60
# ycsb center of oscillation
offset = 6000
# ycsb width of oscillation
amplitude = 3000
# number of periods in total_run_time.
num_periods = 1
# percentage of training of total_run_time. If 0, then value of epsilon doesn't matter
training_perc = 0.4
# percentage of ycsb-reads, the rest will be ycsb-updates
read = 1
# amount of records to be loaded(?)
records = 10000000
## DEFINE THE LOAD-PARAMETERS FOR PEAKY:
# to-do

#################################More configuration########################################
## PROPERTIES FOR: run_warm_up() (always run warm-up):
warm_up_tests = 1
warm_up_target = 7000
# True for running benchmark, False for NOT. (not necessary)
bench = True
# percentage of exploration. If 0, then value of training_perc doesn't matter
epsilon = 1
