[config]

#### PROPERTIES FOR RUNNING TIRAMOLA

## CONFING DIR?
# possible config-dir property

#################################More configuration###########################################################
# Properties for warm-up(always run warm-up):
warm_up_tests = 1
warm_up_target = 40000
# True for running benchmark, False for NOT. (not necessary)
bench = False
# percentage of exploration. If 0, then value of training_perc doesn't matter
epsilon = 0
#############################################################################################################

#################################YCSB setup###################################################################
## CHOOSE THE TYPE OF LOAD
# CHOICES: sinusoidal, peaky
load_type = sinusoidal
## DEFINE THE LOAD-PARAMETERS FOR SINUSOIDAL
# ycsb_max_time IS IN SECONDS. Duration of run_test() [one simple run]
ycsb_max_time = 180
# ycsb total_run_time IS IN MINUTES. Duration of the whole experiment
total_run_time = 600
# ycsb center of oscillation
offset = 20000
# ycsb width of oscillation
amplitude = 8000
# number of periods in total_run_time.
num_periods = 2
# percentage of training of total_run_time. If 0, then value of epsilon doesn't matter
training_perc = 0.5
# percentage of ycsb-reads, the rest will bu ycsb-updates
read = 1
# amount of records to be loaded(?)
records = 50000
## DEFINE THE LOAD-PARAMETERS FOR PEAKY
# to-do

## YCSB CONF-FILES	// to diko mou filepath gia ycsb | workload.cfg ??
ycsb_binary = /home/ubuntu/ycsb-0.13.0-SNAPSHOT/bin/ycsb
workload_file = /home/ubuntu/tiramola/myWorkload.cfg
ycsb_output = /tmp/ycsb.out
ycsb_clients = 3
#############################################################################################################

#################################DecisionMaking setup######################################################
## NAME OF DM-FILE TO BE USED. 
decision_making_file = /decisionMaking.mdpdt5.json
training_file = /home/ubuntu/tiramola/training.data

## CHOOSE THE UPDATE-ALGORITHM YOU WANT WITH THE CORRESPONDING error AND max_steps IF NEEDED BY THE ALGORITHM
# CHOICES: no_update, single_update, value_iteration, prioritized_sweeping
update_algorithm = prioritized_sweeping
ualgorithm_error = 0.1
max_steps = 200
##############################################################################################################

#################################Deamon Setup################################################################
## The installation directory	// sto idio filepath tha exeis kai to myTiramola
install_dir = /home/ubuntu/tiramola
## The dir that contains the credentials downloaded from Eucalyptus Web frontend	// euca2ools 'h novaclient? oeo? Mporeis na breis config kai gia ta 2 kai na ta valeis sto idio filepath me edw! (obviously)
euca_rc_dir = /home/ubuntu/.openstack
## Starting one master and one node originally		// klein meine, vale 1 + 1 an thes (aka 1)
initial_cluster_size = 2
## The bucket that contains the emi to use. All dbs are installed in the /opt directory inside the image.	// mhpws na ksanaegkatastiseis ta panta? wtf is bucket_name?
bucket_name = ded38fe1-afd6-4a11-946d-d17253a639f6
## The default size for instances. It has to be one of the possible flavors	// to eidos twn VMs pou tha ftiaxnontai. Mallon kati tetoio vale ki esy. Flavors? en kserw.
instance_type = singles.1
## The name of the cluster	// pou vriskw to cluster-name? Des gia to diko sou. Logika ua einai "gargyr- ... "  Rwta kai i-kons
cluster_name = klolos-hadoop
## The template for instance hostnames		// Orise kai swsta-syneph onomata gia to katthe VM pou eite exeis prodhmiourghsei 'h tha dimiourgithei. 
hostname_template = klolos-nodes-
## Cluster type (supported types are: HBASE, CASSANDRA, RIAK)		// HBase gia 
cluster_type = HBASE
## Temporary database location		// Ti einai auto?
db_file = sqlite:////home/ubuntu/hbase.db
## The type of API to call the cluster controller	// Ti ennoei?
cloud_api_type = EC2_OS
## Are we reconfiguring an existing cluster?	// e, mallon True ki egw.
reconfigure = True
#############################################################################################################


## The key pair name of the new instances	// To diko sou gia tin wra einai: htest2
keypair_name = hmaster
## The location of the private key file		// den exoume ki oute tha exoume kapoia allagi
key_file = /home/ubuntu/.ssh/id_rsa

## Maximum cluster size (cost considerations)		// o,ti leei, symfwna me proypologismo eisai [3 ycsb, 1 master, ews 6 slaves]
max_cluster_size = 6	

possible_flavors = singles.1,doubles.1
 
## Username in Openstack	// fantazomai to diko mou einai gargyr
#username = klolos
username = gargyr

########## BASED ON LAMBDA AND LATENCY ################
## Average max throughput per server
serv_throughput = 3500
## Cost function that provides the state transition cost for the FSMDecisionMaker
trans_cost = 1
## The gain function of staying at a particular state. This in essense is a rate.
#gain =  max(0,((  min( max_throughput, inlambda) - max(0, (latency-2000)/1000.0)*max_throughput ) * 0.002 ) - (num_nodes * 0.4) )
## Rigged gain for rebalancing
## Force add nodes
gain =   num_nodes
## Force remove nodes
#gain =   -1 * num_nodes




#####################################################OLD VERSION###################################
########## BASED ON CPU ONLY ################
## Cost function that provides the state transition cost for the FSMDecisionMaker
#trans_cost = ((max_throughput * 0.0001) - (added_nodes * cpu))
## The gain function of staying at a particular state. This in essense is a rate.
#gain = ((num_nodes * cpu ) - (num_nodes * 40))

########## BASED ON LATENCY ################
## Cost function that provides the state transition cost for the FSMDecisionMaker
#trans_cost =   ((max_throughput * 0.002 * 0.9) + (added_nodes * 10000 * 0.002))
## The gain function of staying at a particular state. This in essense is a rate.
#gain = ((max_throughput * 0.002) - (num_nodes * 400) + (latency * max_throughput * 0.01))

[thresholds_add]
## Add the thresholds that the Coordinator will monitor and decide whether to add/remove nodes.
## The metrics that follow provide example setup.
#mem_free = low_1000000
#disk_free = low_%10
#load_five = high_0.4
#cpu_idle = low_60
#cpu_wio = low_5
#load_five = high_10

[thresholds_remove]
#mem_free = high_11000000
#load_five = low_1
#cpu_idle = high_85
#load_five = low_0